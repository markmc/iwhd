#!/bin/sh
# Test basic functionality.

. "${srcdir=.}/init.sh"; path_prepend_ ..

mkdir FS mongod iwhd || framework_failure_ mkdir failed

# FIXME: start this only if there's not a working one already running, or
# probably better, start this one unconditionally and make iwhd use it.
mongod --pidfilepath mongod/pid --dbpath mongod > mongod.log 2>&1 &
mongo_pid=$!
cleanup_() { kill $mongo_pid; }

# Wait for up to 3 seconds for mongod to begin listening.
wait_for .1 30 'mongo < /dev/null' \
  || framework_failure_ mongod failed to start

# FIXME: currently iwhd creates buckets in the working dir.
# Once that is fixed, we won't need this "cd".
cd iwhd

# "path": "FS"
printf '[ { "type": "fs",   "name": "primary" } ]\n' > iwhd.cfg || fail=1

port=9091
iwhd -v -p $port -c iwhd.cfg &
iwhd_pid=$!
cleanup_() { kill $mongo_pid $iwhd_pid; }

# Wait for up to 3 seconds for iwhd to begin listening on $port.
wait_for .1 30 "curl http://localhost:$port" \
  || { echo iwhd failed to listen; Exit 1; }

curl -X PUT http://localhost:$port/b1 || fail=1
test -d b1 || fail=1

echo foo | curl -T - http://localhost:$port/b1/f1 || fail=1
test -f b1/f1 || fail=1
test "$(cat b1/f1)" = foo || fail=1

kill $mongo_pid $iwhd_pid

Exit $fail
